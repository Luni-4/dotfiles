#!/usr/bin/env python3

import argparse
import subprocess
import sys
import typing as T
from pathlib import Path


def main() -> None:
    parser = argparse.ArgumentParser(
        prog="install-configs",
        description="This tool installs my dotfiles on various Linux distributions",
    )

    # Optional args
    parser.add_argument(
        "-t",
        "--target",
        type=lambda value: Path(value),
        default=Path.home(),
        help="Stow target directory",
    )

    parser.add_argument(
        "-d",
        "--dir",
        type=lambda value: Path(value),
        default=Path(__file__).parent,
        help="Stow dotfiles directory",
    )

    parser.add_argument("-l", "--list", nargs="+", help="List of chosen dotfiles")

    # Mutually exclusive optional parameters
    group = parser.add_mutually_exclusive_group()
    group.add_argument(
        "-D",
        "--delete",
        action="store_true",
        help="Delete dotfiles",
    )

    group.add_argument(
        "-R",
        "--restow",
        action="store_true",
        help="Restow dotfiles",
    )

    # Get arguments
    args = parser.parse_args()

    # Get all directories contained in the `dir` option
    available_package_names = {
        path.name
        for path in args.dir.glob("*")
        if path.is_dir() and not path.name.startswith(".")
    }

    # Final dotfiles used by stow
    package_names = set()
    print(available_package_names)

    # Remove the duplicated packages passed as input and make the intersection
    # among the two sets in order to maintain only the input packages
    if args.list is not None:
        provided_package_names = set(args.list)
        package_names = provided_package_names & available_package_names

    # If package_names is empty, use each available package
    if not package_names:
        package_names = available_package_names

    # Set stow operation
    if args.delete:
        operation = "-D"
    elif args.restow:
        operation = "-R"
    else:
        operation = "-S"

    # Define the stow command
    cmd = [
        "stow",
        f"--dir={args.dir!s}",
        f"--target={args.target!s}",
        operation,
        *package_names,
    ]

    # Run stow command
    subprocess.run(cmd, stdout=sys.stdout, stderr=sys.stderr)


if __name__ == "__main__":
    main()
